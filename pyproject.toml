[build-system]
requires = ["uv_build>=0.7.19,<0.8.0"]
build-backend = "uv_build"

[project]
name = "lighter"
version = "0.0.3"
description = "YAML-based automated rapid prototyping framework for deep learning experiments"
authors = [
    { name = "Ibrahim Hadzic", email = "ibrahimhadzic45@gmail.com" },
    { name = "Suraj Pai", email = "b.pai@maastrichtuniversity.nl" },
    { name = "Keno Bressem", email = "kbressem@bwh.harvard.edu" },
]
requires-python = ">=3.10"
readme = "README.md"
license = "MIT"
keywords = []
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "torch>=2.1.2",
    "pandas>=1.5.3",
    "numpy<2.0.0",
    "pytorch-lightning>=2.1.3",
    "fire>=0.5.0",
    "loguru>=0.6.0",
    "torchmetrics>=1.2.0",
    "tensorboard>=2.11.2",
    "requests>=2.31.0",
    "monai>=1.4.0",
    "rich>=13.7.0",
    "torchvision>=0.20.0",
    "cerberus>=1.3.7",
]

[project.urls]
Homepage = "https://github.com/lighter/lighter"
Repository = "https://github.com/lighter/lighter"

[project.scripts]
lighter = "lighter.engine.runner:cli"

[dependency-groups]
dev = [
    { include-group = "doc" },
    { include-group = "maintain" },
    { include-group = "quality" },
    { include-group = "types" },
    { include-group = "test" },
    "ipykernel==6.29.5",
    "ipywidgets==8.1.5",
    "pre-commit-uv==4.1.4",
]
doc = [
    "mkdocs-autorefs>=1.4.1",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-literate-nav>=0.6.2",
    "mkdocs-material>=9.6.12",
    "mkdocs-section-index>=0.3.10",
    "mkdocstrings[python]>=0.29.1",
]
maintain = ["bump-my-version==0.30.1"]
quality = ["ruff>=0.5.0"]
types = [
    "mypy>=1.14.1",
    "typing-extensions>=4.4.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-html>=3.2.0",
    "pytest-cov>=4.0.0",
    "coverage>=7.0.5",
    "coverage-badge>=1.1.0",
    "pytest-metadata>=3.1.1",
    "aiohttp>=3.8.3",
    "itk>=5.4.0",
    "av>=12.0.0",
]

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = "3.10"
pretty = true
show_traceback = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
testpaths = ["tests"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]
# Markers to categorize tests
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "serial",
]

[tool.coverage.run]
source = ["tests"]
branch = true

[tool.coverage.report]
fail_under = 90
show_missing = true

[tool.ruff]
# https://docs.astral.sh/ruff/configuration/
line-length = 127
target-version = "py310"

[tool.ruff.lint]
preview = true
select = ["B", "E", "F", "I", "W"]
ignore = ["E203", "E501", "N813"]

[tool.bumpversion]
current_version = "0.0.3"
commit = true
tag = true

[[tool.bumpversion.files]]
filename = "src/lighter/__init__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'
