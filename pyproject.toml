[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lighter"
version = "0.0.3a19"
description = "YAML-based automated rapid prototyping framework for deep learning experiments"
authors = [
    { name = "Ibrahim Hadzic", email = "ibrahimhadzic45@gmail.com" },
    { name = "Suraj Pai", email = "b.pai@maastrichtuniversity.nl" },
    { name = "Keno Bressem", email = "kbressem@bwh.harvard.edu" },
]
requires-python = "~=3.10"
readme = "README.md"
license = "MIT"
keywords = []
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "torch>=2.1.2,<3",
    "pandas>=1.5.3,<2",
    "numpy<2.0.0",
    "pytorch-lightning>=2.1.3,<3",
    "fire>=0.5.0,<0.6",
    "loguru>=0.6.0,<0.7",
    "torchmetrics>=1.2.0,<2",
    "tensorboard>=2.11.2,<3",
    "requests>=2.31.0,<3",
    "monai>=1.4.0",
    "rich>=13.7.0,<14",
    "torchvision>=0.20.0,<0.21",
    "lightly>=1.5.13,<2",
    "cerberus>=1.3.7",
]

[project.urls]
Homepage = "https://github.com/lighter/lighter"
Repository = "https://github.com/lighter/lighter"

[project.scripts]
lighter = "lighter.engine.runner:cli"

[dependency-groups]
# Dependencies for dev/CI tasks
dev = [
    "typing-extensions>=4.4.0,<5",
    "aiohttp>=3.8.3,<4",
    "pytest>=7.4.0,<8",
    "pytest-html>=3.2.0,<4",
    "pytest-cov>=4.0.0,<5",
    "coverage>=7.0.5,<8",
    "coverage-badge>=1.1.0,<2",
    "pylint>=3.3.3",
    "itk>=5.4.0",
    "av==12.0.0",
    "pytest-metadata>=3.1.1",
]

[tool.uv]
# This ensures dev dependencies are always installed by default
default-groups = ["dev"]

[tool.hatch.build.targets.sdist]
include = ["lighter"]

[tool.hatch.build.targets.wheel]
include = ["lighter"]

[tool.black]
# https://github.com/psf/black
target-version = ["py310"]
line-length = 127

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 310
line_length = 127

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.10
pretty = true
show_traceback = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
testpaths = ["tests"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]
# Markers to categorize tests
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "serial",
]

[tool.coverage.run]
source = ["tests"]
branch = true

[tool.coverage.report]
fail_under = 90
show_missing = true

[tool.pylint."MESSAGES CONTROL"]
max-line-length = 127
allowed-redefined-builtins = ["input"]
disable = ["too-many-arguments", "no-else-return"]

[tool.pylint.master]
fail-under=8

# Used in Makefile by poetry-bumpversion
[tool.poetry_bumpversion.file."lighter/__init__.py"]